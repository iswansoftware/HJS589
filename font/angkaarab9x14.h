

/*
 * Fareed Read
 * http://www.facebook.com/fareedreads
 *
 * angkaarab9x14
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : angkaarab9x14.h
 * Date                : 13.01.2019
 * Font size in bytes  : 1403
 * Font width          : 9
 * Font height         : -14
 * Font first char     : 48
 * Font last char      : 59
 * Font used chars     : 11
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef ANGKAARAB9X14_H
#define ANGKAARAB9X14_H

#define ANGKAARAB9X14_WIDTH 9
#define ANGKAARAB9X14_HEIGHT -14

const static uint8_t angkaarab9x14[] PROGMEM = {
    0x05, 0x7B, // size
    0x09, // width
    0x0E, // height
    0x30, // first char
    0x0B, // char count
    
    // char widths
    0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 
    0x09, 
    
    // font data
    0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x1C, 0x0C, 0x04, 0x00, 0x00, // 48
    0x00, 0x00, 0x0E, 0x3F, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1C, 0xFC, 0x00, 0x00, // 49
    0x00, 0x0F, 0x1F, 0xFC, 0xFC, 0x1C, 0x1E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1C, 0x3C, 0xF0, 0x00, 0x00, // 50
    0x0F, 0x3F, 0x7C, 0xFC, 0xDF, 0x1C, 0x1C, 0x1E, 0x07, 0x00, 0x00, 0x00, 0x04, 0x3C, 0xF8, 0x00, 0x00, 0x00, // 51
    0x00, 0x00, 0xE0, 0xF0, 0xD8, 0xCC, 0xC6, 0x43, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xE4, 0xE0, 0x60, 0x60, // 52
    0x00, 0xC0, 0x70, 0x1C, 0x1C, 0x3C, 0x78, 0xE0, 0x00, 0x00, 0x7C, 0xE0, 0xE0, 0xE0, 0xE0, 0x70, 0x1C, 0x00, // 53
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, // 54
    0x06, 0x3F, 0xF8, 0xE0, 0x80, 0x80, 0xF0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x0C, 0x7C, 0xFC, 0x1C, 0x00, 0x00, // 55
    0x00, 0x80, 0xF0, 0xFF, 0x3E, 0xF0, 0xC0, 0x00, 0x00, 0xF0, 0xFC, 0x1C, 0x00, 0x00, 0x00, 0x0C, 0x3C, 0xF0, // 56
    0x78, 0xE6, 0xE7, 0x67, 0x6F, 0xFE, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x3C, 0x7C, 0xF8, // 57
    0x00, 0x00, 0x08, 0x1C, 0x3E, 0x1C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x7C, 0x38, 0x10, 0x00, 0x00 // 58
    
};

#endif
